{"ast":null,"code":"import _toConsumableArray from\"/Users/cchinn1/Websites/Tutorials/Storybook-Tutorial/taskbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import Task from'./Task';import{connect}from'react-redux';import{archiveTask,pinTask}from'../lib/redux';export function PureTaskList(_ref){var loading=_ref.loading,tasks=_ref.tasks,onPinTask=_ref.onPinTask,onArchiveTask=_ref.onArchiveTask;var events={onPinTask:onPinTask,onArchiveTask:onArchiveTask};var LoadingRow=/*#__PURE__*/React.createElement(\"div\",{className:\"loading-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"glow-checkbox\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"glow-text\"},/*#__PURE__*/React.createElement(\"span\",null,\"Loading\"),\" \",/*#__PURE__*/React.createElement(\"span\",null,\"cool\"),\" \",/*#__PURE__*/React.createElement(\"span\",null,\"state\")));if(loading){return/*#__PURE__*/React.createElement(\"div\",{className:\"list-items\"},LoadingRow,LoadingRow,LoadingRow,LoadingRow,LoadingRow,LoadingRow);}if(tasks.length===0){return/*#__PURE__*/React.createElement(\"div\",{className:\"list-items\"},/*#__PURE__*/React.createElement(\"div\",{className:\"wrapper-message\"},/*#__PURE__*/React.createElement(\"span\",{className:\"icon-check\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"title-message\"},\"You have no tasks\"),/*#__PURE__*/React.createElement(\"div\",{className:\"subtitle-message\"},\"Sit back and relax\")));}var tasksInOrder=[].concat(_toConsumableArray(tasks.filter(function(t){return t.state==='TASK_PINNED';})),_toConsumableArray(tasks.filter(function(t){return t.state!=='TASK_PINNED';})));return/*#__PURE__*/React.createElement(\"div\",{className:\"list-items\"},tasksInOrder.map(function(task){return/*#__PURE__*/React.createElement(Task,Object.assign({key:task.id,task:task},events));}));}PureTaskList.defaultProps={loading:false};PureTaskList.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"PureTaskList\",\"props\":{\"loading\":{\"defaultValue\":{\"value\":\"false\",\"computed\":false},\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"\"},\"tasks\":{\"type\":{\"name\":\"arrayOf\",\"value\":{\"name\":\"custom\",\"raw\":\"Task.propTypes.task\"}},\"required\":true,\"description\":\"\"},\"onPinTask\":{\"type\":{\"name\":\"func\"},\"required\":true,\"description\":\"\"},\"onArchiveTask\":{\"type\":{\"name\":\"func\"},\"required\":true,\"description\":\"\"}}};export default connect(function(_ref2){var tasks=_ref2.tasks;return{tasks:tasks.filter(function(t){return t.state==='TASK_INBOX'||t.state==='TASK_PINNED';})};},function(dispatch){return{onArchiveTask:function onArchiveTask(id){return dispatch(archiveTask(id));},onPinTask:function onPinTask(id){return dispatch(pinTask(id));}};})(PureTaskList);if(typeof STORYBOOK_REACT_CLASSES!==\"undefined\"){STORYBOOK_REACT_CLASSES[\"src/components/TaskList.js\"]={name:\"PureTaskList\",docgenInfo:PureTaskList.__docgenInfo,path:\"src/components/TaskList.js\"};}","map":{"version":3,"sources":["/Users/cchinn1/Websites/Tutorials/Storybook-Tutorial/taskbox/src/components/TaskList.js"],"names":["React","Task","connect","archiveTask","pinTask","PureTaskList","loading","tasks","onPinTask","onArchiveTask","events","LoadingRow","length","tasksInOrder","filter","t","state","map","task","id","defaultProps","dispatch"],"mappings":"2LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,WAAT,CAAsBC,OAAtB,KAAqC,cAArC,CAEA,MAAO,SAASC,CAAAA,YAAT,MAAoE,IAA5CC,CAAAA,OAA4C,MAA5CA,OAA4C,CAAnCC,KAAmC,MAAnCA,KAAmC,CAA5BC,SAA4B,MAA5BA,SAA4B,CAAjBC,aAAiB,MAAjBA,aAAiB,CACzE,GAAMC,CAAAA,MAAM,CAAG,CACbF,SAAS,CAATA,SADa,CAEbC,aAAa,CAAbA,aAFa,CAAf,CAKA,GAAME,CAAAA,UAAU,cACd,2BAAK,SAAS,CAAC,cAAf,eACE,4BAAM,SAAS,CAAC,eAAhB,EADF,cAEE,4BAAM,SAAS,CAAC,WAAhB,eACE,0CADF,kBACuB,uCADvB,kBACyC,wCADzC,CAFF,CADF,CASA,GAAIL,OAAJ,CAAa,CACX,mBACE,2BAAK,SAAS,CAAC,YAAf,EACGK,UADH,CAEGA,UAFH,CAGGA,UAHH,CAIGA,UAJH,CAKGA,UALH,CAMGA,UANH,CADF,CAUD,CAED,GAAIJ,KAAK,CAACK,MAAN,GAAiB,CAArB,CAAwB,CACtB,mBACE,2BAAK,SAAS,CAAC,YAAf,eACE,2BAAK,SAAS,CAAC,iBAAf,eACE,4BAAM,SAAS,CAAC,YAAhB,EADF,cAEE,2BAAK,SAAS,CAAC,eAAf,sBAFF,cAGE,2BAAK,SAAS,CAAC,kBAAf,uBAHF,CADF,CADF,CASD,CAED,GAAMC,CAAAA,YAAY,8BACbN,KAAK,CAACO,MAAN,CAAa,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,KAAF,GAAY,aAAnB,EAAb,CADa,qBAEbT,KAAK,CAACO,MAAN,CAAa,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,KAAF,GAAY,aAAnB,EAAb,CAFa,EAAlB,CAKA,mBACE,2BAAK,SAAS,CAAC,YAAf,EACGH,YAAY,CAACI,GAAb,CAAiB,SAACC,IAAD,qBAChB,oBAAC,IAAD,gBAAM,GAAG,CAAEA,IAAI,CAACC,EAAhB,CAAoB,IAAI,CAAED,IAA1B,EAAoCR,MAApC,EADgB,EAAjB,CADH,CADF,CAOD,CASDL,YAAY,CAACe,YAAb,CAA4B,CAC1Bd,OAAO,CAAE,KADiB,CAA5B,C,meAIA,cAAeJ,CAAAA,OAAO,CACpB,mBAAGK,CAAAA,KAAH,OAAGA,KAAH,OAAgB,CACdA,KAAK,CAAEA,KAAK,CAACO,MAAN,CAAa,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,KAAF,GAAY,YAAZ,EAA4BD,CAAC,CAACC,KAAF,GAAY,aAA5C,EAAd,CADO,CAAhB,EADoB,CAIpB,SAAAK,QAAQ,QAAK,CACXZ,aAAa,CAAE,uBAAAU,EAAE,QAAIE,CAAAA,QAAQ,CAAClB,WAAW,CAACgB,EAAD,CAAZ,CAAZ,EADN,CAEXX,SAAS,CAAE,mBAAAW,EAAE,QAAIE,CAAAA,QAAQ,CAACjB,OAAO,CAACe,EAAD,CAAR,CAAZ,EAFF,CAAL,EAJY,CAAP,CAQbd,YARa,CAAf,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Task from './Task';\nimport { connect } from 'react-redux';\nimport { archiveTask, pinTask } from '../lib/redux';\n\nexport function PureTaskList({ loading, tasks, onPinTask, onArchiveTask }) {\n  const events = {\n    onPinTask,\n    onArchiveTask,\n  };\n\n  const LoadingRow = (\n    <div className=\"loading-item\">\n      <span className=\"glow-checkbox\" />\n      <span className=\"glow-text\">\n        <span>Loading</span> <span>cool</span> <span>state</span>\n      </span>\n    </div>\n  );\n\n  if (loading) {\n    return (\n      <div className=\"list-items\">\n        {LoadingRow}\n        {LoadingRow}\n        {LoadingRow}\n        {LoadingRow}\n        {LoadingRow}\n        {LoadingRow}\n      </div>\n    );\n  }\n\n  if (tasks.length === 0) {\n    return (\n      <div className=\"list-items\">\n        <div className=\"wrapper-message\">\n          <span className=\"icon-check\" />\n          <div className=\"title-message\">You have no tasks</div>\n          <div className=\"subtitle-message\">Sit back and relax</div>\n        </div>\n      </div>\n    );\n  }\n\n  const tasksInOrder = [\n    ...tasks.filter((t) => t.state === 'TASK_PINNED'),\n    ...tasks.filter((t) => t.state !== 'TASK_PINNED'),\n  ];\n\n  return (\n    <div className=\"list-items\">\n      {tasksInOrder.map((task) => (\n        <Task key={task.id} task={task} {...events} />\n      ))}\n    </div>\n  );\n}\n\nPureTaskList.propTypes = {\n  loading: PropTypes.bool,\n  tasks: PropTypes.arrayOf(Task.propTypes.task).isRequired,\n  onPinTask: PropTypes.func.isRequired,\n  onArchiveTask: PropTypes.func.isRequired,\n};\n\nPureTaskList.defaultProps = {\n  loading: false,\n};\n\nexport default connect(\n  ({ tasks }) => ({\n    tasks: tasks.filter(t => t.state === 'TASK_INBOX' || t.state === 'TASK_PINNED'),\n  }),\n  dispatch => ({\n    onArchiveTask: id => dispatch(archiveTask(id)),\n    onPinTask: id => dispatch(pinTask(id)),\n  })\n)(PureTaskList);"]},"metadata":{},"sourceType":"module"}