{"ast":null,"code":"var _jsxFileName = \"/Users/cchinn1/Websites/Tutorials/Storybook-Tutorial/taskbox/src/components/InboxScreen.stories.js\";\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React from 'react';\\nimport { action } from '@storybook/addon-actions';\\nimport { Provider } from 'react-redux';\\n\\nimport { PureInboxScreen } from './InboxScreen';\\nimport { defaultTasksData } from './TaskList.stories';\\n\\nexport default {\\n  component: PureInboxScreen,\\n  title: 'InboxScreen',\\n  decorators: [story => <Provider store={store}>{story()}</Provider>],\\n};\\n\\n// A super-simple mock of a redux store\\nconst store = {\\n  getState: () => {\\n    return {\\n      tasks: defaultTasksData,\\n    };\\n  },\\n  subscribe: () => 0,\\n  dispatch: action('dispatch'),\\n};\\n\\nexport const Default = () => <PureInboxScreen />;\\n\\nexport const Error = () => <PureInboxScreen error=\\\"Something\\\" />;\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"Default\": {\n    \"startLoc\": {\n      \"col\": 23,\n      \"line\": 25\n    },\n    \"endLoc\": {\n      \"col\": 48,\n      \"line\": 25\n    },\n    \"startBody\": {\n      \"col\": 23,\n      \"line\": 25\n    },\n    \"endBody\": {\n      \"col\": 48,\n      \"line\": 25\n    }\n  },\n  \"Error\": {\n    \"startLoc\": {\n      \"col\": 21,\n      \"line\": 27\n    },\n    \"endLoc\": {\n      \"col\": 64,\n      \"line\": 27\n    },\n    \"startBody\": {\n      \"col\": 21,\n      \"line\": 27\n    },\n    \"endBody\": {\n      \"col\": 64,\n      \"line\": 27\n    }\n  }\n};\nimport React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { Provider } from 'react-redux';\nimport { PureInboxScreen } from './InboxScreen';\nimport { defaultTasksData } from './TaskList.stories';\nexport default {\n  component: PureInboxScreen,\n  title: 'InboxScreen',\n  decorators: [story => /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }\n  }, story())]\n}; // A super-simple mock of a redux store\n\nconst store = {\n  getState: () => {\n    return {\n      tasks: defaultTasksData\n    };\n  },\n  subscribe: () => 0,\n  dispatch: action('dispatch')\n};\nexport const Default = () => /*#__PURE__*/React.createElement(PureInboxScreen, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 30\n  }\n});\n;\nexport const Error = () => /*#__PURE__*/React.createElement(PureInboxScreen, {\n  error: \"Something\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 28\n  }\n});\nDefault.parameters = {\n  storySource: {\n    source: \"() => <PureInboxScreen />\"\n  },\n  ...Default.parameters\n};\nError.parameters = {\n  storySource: {\n    source: \"() => <PureInboxScreen error=\\\"Something\\\" />\"\n  },\n  ...Error.parameters\n};\nDefault.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Default\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/InboxScreen.stories.js\"] = {\n    name: \"Default\",\n    docgenInfo: Default.__docgenInfo,\n    path: \"src/components/InboxScreen.stories.js\"\n  };\n}\n\nError.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Error\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/InboxScreen.stories.js\"] = {\n    name: \"Error\",\n    docgenInfo: Error.__docgenInfo,\n    path: \"src/components/InboxScreen.stories.js\"\n  };\n}","map":{"version":3,"sources":["/Users/cchinn1/Websites/Tutorials/Storybook-Tutorial/taskbox/src/components/InboxScreen.stories.js"],"names":["__STORY__","__LOCATIONS_MAP__","React","action","Provider","PureInboxScreen","defaultTasksData","component","title","decorators","story","store","getState","tasks","subscribe","dispatch","Default","Error","parameters","storySource","source"],"mappings":";;AACM;AACA;AACA;AACA,IAAIA,SAAS,GAAG,ksBAAhB,C,CACA;;AACA,IAAIC,iBAAiB,GAAG;AAAC,aAAU;AAAC,gBAAW;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAZ;AAAiC,cAAS;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA1C;AAA+D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA3E;AAAgG,eAAU;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB;AAA1G,GAAX;AAA2I,WAAQ;AAAC,gBAAW;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAZ;AAAiC,cAAS;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA1C;AAA+D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA3E;AAAgG,eAAU;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB;AAA1G;AAAnJ,CAAxB;AAEN,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA,eAAe;AACbC,EAAAA,SAAS,EAAEF,eADE;AAEbG,EAAAA,KAAK,EAAE,aAFM;AAGbC,EAAAA,UAAU,EAAE,CAACC,KAAK,iBAAI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBD,KAAK,EAA9B,CAAV;AAHC,CAAf,C,CAMA;;AACA,MAAMC,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE,MAAM;AACd,WAAO;AACLC,MAAAA,KAAK,EAAEP;AADF,KAAP;AAGD,GALW;AAMZQ,EAAAA,SAAS,EAAE,MAAM,CANL;AAOZC,EAAAA,QAAQ,EAAEZ,MAAM,CAAC,UAAD;AAPJ,CAAd;AAUA,OAAO,MAAMa,OAAO,GAAG,mBAAM,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAtB;AAA0C;AAEjD,OAAO,MAAMC,KAAK,GAAG,mBAAM,oBAAC,eAAD;AAAiB,EAAA,KAAK,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAApB;AAGPD,OAAO,CAACE,UAAR,GAAqB;AAAEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAf;AAAwD,KAAGJ,OAAO,CAACE;AAAnE,CAArB;AACAD,KAAK,CAACC,UAAN,GAAmB;AAAEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAf;AAA4E,KAAGH,KAAK,CAACC;AAArF,CAAnB","sourcesContent":["\n      /* eslint-disable */\n      // @ts-nocheck\n      // @ts-ignore\n      var __STORY__ = \"import React from 'react';\\nimport { action } from '@storybook/addon-actions';\\nimport { Provider } from 'react-redux';\\n\\nimport { PureInboxScreen } from './InboxScreen';\\nimport { defaultTasksData } from './TaskList.stories';\\n\\nexport default {\\n  component: PureInboxScreen,\\n  title: 'InboxScreen',\\n  decorators: [story => <Provider store={store}>{story()}</Provider>],\\n};\\n\\n// A super-simple mock of a redux store\\nconst store = {\\n  getState: () => {\\n    return {\\n      tasks: defaultTasksData,\\n    };\\n  },\\n  subscribe: () => 0,\\n  dispatch: action('dispatch'),\\n};\\n\\nexport const Default = () => <PureInboxScreen />;\\n\\nexport const Error = () => <PureInboxScreen error=\\\"Something\\\" />;\";\n      // @ts-ignore\n      var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":23,\"line\":25},\"endLoc\":{\"col\":48,\"line\":25},\"startBody\":{\"col\":23,\"line\":25},\"endBody\":{\"col\":48,\"line\":25}},\"Error\":{\"startLoc\":{\"col\":21,\"line\":27},\"endLoc\":{\"col\":64,\"line\":27},\"startBody\":{\"col\":21,\"line\":27},\"endBody\":{\"col\":64,\"line\":27}}};\n    \nimport React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport { Provider } from 'react-redux';\n\nimport { PureInboxScreen } from './InboxScreen';\nimport { defaultTasksData } from './TaskList.stories';\n\nexport default {\n  component: PureInboxScreen,\n  title: 'InboxScreen',\n  decorators: [story => <Provider store={store}>{story()}</Provider>],\n};\n\n// A super-simple mock of a redux store\nconst store = {\n  getState: () => {\n    return {\n      tasks: defaultTasksData,\n    };\n  },\n  subscribe: () => 0,\n  dispatch: action('dispatch'),\n};\n\nexport const Default = () => <PureInboxScreen />;;\n\nexport const Error = () => <PureInboxScreen error=\"Something\" />;\n\n\nDefault.parameters = { storySource: { source: \"() => <PureInboxScreen />\" }, ...Default.parameters };\nError.parameters = { storySource: { source: \"() => <PureInboxScreen error=\\\"Something\\\" />\" }, ...Error.parameters };"]},"metadata":{},"sourceType":"module"}